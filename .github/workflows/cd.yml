name: "PHP Docker images delivery"

on:
  schedule:
    # once per week
    - cron: "0 5 1,14 * *"
  push:
    tags:
      - "v*.*.*"

jobs:
  Test:
    uses: ./.github/workflows/ci.yml

  Deploy:
    name: "Image deployment"
    needs: Test
    strategy:
      matrix:
        #TODO: include (for Alpine)
        php-version: ['8.2', '8.1', '8.0', '7.4', '8.3']
        variant: ['cli', 'fpm']
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout code
      uses: actions/checkout@v4
    -
      name: Set up QEMU (multiplatform)
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx (multiplatform)
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Export PHP version to ENV
      run: |
        docker build -t version --target=${{ matrix.variant }} --build-arg PHP_VERSION=${{ matrix.php-version }} .
        echo "PHP_PACKAGE_VERSION=$(docker run version -v | grep -Eo -m 1 '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_ENV
    -
      name: Prepare image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/php
        # sample tag output: 8.2-cli, 8.2.11, latest, cli, 8.2.11-cli, 8.2.11-cli-20230712, 8.2.11
        tags: |
          type=raw,value=${{ matrix.php-version }}-${{ matrix.variant }}
          type=raw,value=${{ matrix.php-version }},enable=${{ matrix.variant == 'cli' }}
          type=raw,value=latest,enable=${{ matrix.php-version == '8.2' && matrix.variant == 'cli' }}
          type=raw,value=${{ matrix.variant }},enable=${{ matrix.php-version == '8.2' }}
          type=raw,value=${{ env.PHP_PACKAGE_VERSION }}-${{ matrix.variant }}
          type=raw,value=${{ env.PHP_PACKAGE_VERSION }}-${{ matrix.variant }}-{{date 'YYYYMMDD'}}
          type=raw,value=${{ env.PHP_PACKAGE_VERSION }},enable=${{ matrix.variant == 'cli' }}
    -
      name: Build & push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        push: true
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        target: ${{ matrix.variant }}
        tags: ${{ steps.meta.outputs.tags }},
        labels: ${{ steps.meta.outputs.labels }},
        build-args: PHP_VERSION=${{ matrix.php-version }}
