name: "PHP Docker NE images delivery"

on:
  schedule:
    # once per week
    - cron: "0 4 1,14 * *"
  push:
    tags:
      - "v*.*.*"

jobs:
  Test:
    uses: ./.github/workflows/ci.yml

  Deploy:
    name: "Image deployment"
    needs: Test
    strategy:
      matrix:
        base-image: ['debian', 'alpine']
        php-version: ['8.3', '8.0', '8.1', '8.2']
        target: ['cli', 'fpm']
        exclude:
          - base-image: alpine
            php-version: '8.3'
          - base-image: alpine
            php-version: '8.0'
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up QEMU (multiplatform)
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx (multiplatform)
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.NE_DOCKERHUB_USERNAME }}
        password: ${{ secrets.NE_DOCKERHUB_TOKEN }}
    - name: Export PHP version to ENV
      run: |
        docker build -t version --target=${{ matrix.target }} -f ./${{ matrix.base-image }}/Dockerfile --build-arg PHP_VERSION=${{ matrix.php-version }} ./${{ matrix.base-image }}
        echo "PHP_REAL_VERSION=$(docker run version -v | grep -Eo -m 1 '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_ENV
    - name: Prepare image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.NE_DOCKERHUB_USERNAME }}/php
        # sample tag output: 8.2-cli, 8.2.11, latest, cli, 8.2.11-cli, 8.2.11-cli-20230712, 8.2.11
        tags: |
          type=raw,value=${{ matrix.php-version }}-${{ matrix.target }},enable=${{ 'debian' == matrix.base-image }}
          type=raw,value=${{ matrix.php-version }},enable=${{ 'cli' == matrix.target && 'debian' == matrix.base-image }}
          type=raw,value=latest,enable=${{ '8.2' == matrix.php-version && 'cli' == matrix.target && 'debian' == matrix.base-image }}
          type=raw,value=${{ matrix.target }},enable=${{ '8.2' == matrix.php-version && 'debian' == matrix.base-image }}
          type=raw,value=${{ env.PHP_REAL_VERSION }}-${{ matrix.target }},enable=${{ 'debian' == matrix.base-image }}
          type=raw,value=${{ env.PHP_REAL_VERSION }}-${{ matrix.target }}-{{ date 'YYYYMMDD' }},enable=${{ 'debian' == matrix.base-image }}
          type=raw,value=${{ env.PHP_REAL_VERSION }},enable=${{ 'cli' == matrix.target && 'debian' == matrix.base-image }}

          type=raw,value=${{ matrix.php-version }}-${{ matrix.target }}-${{ matrix.base-image }}
          type=raw,value=${{ matrix.php-version }}-${{ matrix.base-image }},enable=${{ 'cli' == matrix.target }}
          type=raw,value=${{ matrix.target }}-${{ matrix.base-image }},enable=${{ '8.2' == matrix.php-version }}
          type=raw,value=${{ env.PHP_REAL_VERSION }}-${{ matrix.target }}-${{ matrix.base-image }}
          type=raw,value=${{ env.PHP_REAL_VERSION }}-${{ matrix.target }}-{{date 'YYYYMMDD'}}-${{ matrix.base-image }}
          type=raw,value=${{ env.PHP_REAL_VERSION }}-${{ matrix.base-image }},enable=${{ 'cli' == matrix.target }}
    - name: Build & push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        push: true
        file: ./${{ matrix.base-image }}/Dockerfile
        context: ./${{ matrix.base-image }}/
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        target: ${{ matrix.target }}
        tags: ${{ steps.meta.outputs.tags }},
        labels: ${{ steps.meta.outputs.labels }},
        build-args: PHP_VERSION=${{ matrix.php-version }}
