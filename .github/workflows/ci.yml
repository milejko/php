name: "PHP Docker images CI"

on:
  schedule:
    # once per week (external changes can break this images)
    - cron: "30 3 * * 0"
  pull_request:
  push:

jobs:
  php-images-test:
    strategy:
      matrix:
        php-version: ['8.3', '8.2', '8.1', '8.0', '7.4', '7.3']
        variant: ['fpm', 'cli']
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-${{ matrix.variant }}
        tags: test-image
        build-args: PHP_VERSION=${{ matrix.php-version }}
    - 
      name: Check image consistency
      run:
        docker run test-image -v | grep "PHP ${{ matrix.php-version }}" &&
        docker run test-image -r 'phpinfo();' | grep "PHP Version => ${{ matrix.php-version }}"
        docker run test-image -m | grep "date" &&
        docker run test-image -m | grep "exif" &&
        docker run test-image -m | grep "json" &&
        docker run test-image -m | grep "libxml" &&
        docker run test-image -m | grep "mbstring" &&
        docker run test-image -m | grep "PDO" &&
        docker run test-image -m | grep "session" &&
        docker run test-image -m | grep "tokenizer" &&
        docker run test-image -m | grep "Zend OPcache" &&
        docker run test-image composer -V | grep "Composer version" &&
        docker run test-image -a | grep "Interactive" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M test-image -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M test-image -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"
