name: "PHP Docker images CI"

on:
  schedule:
    # once per week (external changes can break this images)
    - cron: "30 3 * * 0"
  pull_request:
  push:

jobs:
  php83-cli-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-cli
        tags: php-cli-testing
        build-args: PHP_VERSION=8.3
    - 
      name: Check image version
      run:
        docker run php-cli-testing -v | grep "PHP 8.3" &&
        docker run php-cli-testing -r 'phpinfo();' | grep "PHP Version => 8.3"
    - 
      name: Check image consistency
      run:
        docker run php-cli-testing -m | grep "date" &&
        docker run php-cli-testing -m | grep "exif" &&
        docker run php-cli-testing -m | grep "json" &&
        docker run php-cli-testing -m | grep "mbstring" &&
        docker run php-cli-testing -m | grep "PDO" &&
        docker run php-cli-testing -m | grep "session" &&
        docker run php-cli-testing -m | grep "tokenizer" &&
        docker run php-cli-testing -m | grep "Zend OPcache" &&
        docker run php-cli-testing composer -V | grep "Composer version" &&
        docker run php-cli-testing | grep "Interactive shell" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M php-cli-testing -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M php-cli-testing -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"

  php83-fpm-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Doker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-fpm
        tags: php-fpm-testing
        build-args: PHP_VERSION=8.3
    - 
      name: Check FPM binary
      run: 
        docker run php-fpm-testing find /usr/sbin/php-fpm8.3 &&
        docker run php-fpm-testing find /usr/bin/php-fpm

  php82-cli-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-cli
        tags: php-cli-testing
        build-args: PHP_VERSION=8.2
    - 
      name: Check image version
      run:
        docker run php-cli-testing -v | grep "PHP 8.2" &&
        docker run php-cli-testing -r 'phpinfo();' | grep "PHP Version => 8.2"
    - 
      name: Check image consistency
      run:
        docker run php-cli-testing -m | grep "date" &&
        docker run php-cli-testing -m | grep "exif" &&
        docker run php-cli-testing -m | grep "json" &&
        docker run php-cli-testing -m | grep "mbstring" &&
        docker run php-cli-testing -m | grep "PDO" &&
        docker run php-cli-testing -m | grep "session" &&
        docker run php-cli-testing -m | grep "tokenizer" &&
        docker run php-cli-testing -m | grep "Zend OPcache" &&
        docker run php-cli-testing composer -V | grep "Composer version" &&
        docker run php-cli-testing | grep "Interactive shell" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M php-cli-testing -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M php-cli-testing -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"

  php82-fpm-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Doker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-fpm
        tags: php-fpm-testing
        build-args: PHP_VERSION=8.2
    - 
      name: Check FPM binary
      run: 
        docker run php-fpm-testing find /usr/sbin/php-fpm8.2 &&
        docker run php-fpm-testing find /usr/bin/php-fpm

  php81-cli-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-cli
        tags: php-cli-testing
        build-args: PHP_VERSION=8.1
    - 
      name: Check image version
      run:
        docker run php-cli-testing -v | grep "PHP 8.1" &&
        docker run php-cli-testing -r 'phpinfo();' | grep "PHP Version => 8.1"
    - 
      name: Check image consistency
      run:
        docker run php-cli-testing -m | grep "date" &&
        docker run php-cli-testing -m | grep "exif" &&
        docker run php-cli-testing -m | grep "json" &&
        docker run php-cli-testing -m | grep "mbstring" &&
        docker run php-cli-testing -m | grep "PDO" &&
        docker run php-cli-testing -m | grep "session" &&
        docker run php-cli-testing -m | grep "tokenizer" &&
        docker run php-cli-testing -m | grep "Zend OPcache" &&
        docker run php-cli-testing composer -V | grep "Composer version" &&
        docker run php-cli-testing | grep "Interactive shell" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M php-cli-testing -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M php-cli-testing -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"

  php81-fpm-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Doker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-fpm
        tags: php-fpm-testing
        build-args: PHP_VERSION=8.1
    - 
      name: Check FPM binary
      run: 
        docker run php-fpm-testing find /usr/sbin/php-fpm8.1 &&
        docker run php-fpm-testing find /usr/bin/php-fpm

  php80-cli-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-cli
        tags: php-cli-testing
        build-args: PHP_VERSION=8.0
    - 
      name: Check image version
      run:
        docker run php-cli-testing -v | grep "PHP 8.0" &&
        docker run php-cli-testing -r 'phpinfo();' | grep "PHP Version => 8.0"
    - 
      name: Check image consistency
      run:
        docker run php-cli-testing -m | grep "date" &&
        docker run php-cli-testing -m | grep "exif" &&
        docker run php-cli-testing -m | grep "json" &&
        docker run php-cli-testing -m | grep "mbstring" &&
        docker run php-cli-testing -m | grep "PDO" &&
        docker run php-cli-testing -m | grep "session" &&
        docker run php-cli-testing -m | grep "tokenizer" &&
        docker run php-cli-testing -m | grep "Zend OPcache" &&
        docker run php-cli-testing composer -V | grep "Composer version" &&
        docker run php-cli-testing | grep "Interactive mode enabled" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M php-cli-testing -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M php-cli-testing -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"

  php80-fpm-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Doker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-fpm
        tags: php-fpm-testing
        build-args: PHP_VERSION=8.0
    - 
      name: Check FPM binary
      run: 
        docker run php-fpm-testing find /usr/sbin/php-fpm8.0 &&
        docker run php-fpm-testing find /usr/bin/php-fpm

  php74-cli-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-cli
        tags: php-cli-testing
        build-args: PHP_VERSION=7.4
    - 
      name: Check image version
      run:
        docker run php-cli-testing -v | grep "PHP 7.4" &&
        docker run php-cli-testing -r 'phpinfo();' | grep "PHP Version => 7.4"
    - 
      name: Check image consistency
      run:
        docker run php-cli-testing -m | grep "date" &&
        docker run php-cli-testing -m | grep "exif" &&
        docker run php-cli-testing -m | grep "json" &&
        docker run php-cli-testing -m | grep "mbstring" &&
        docker run php-cli-testing -m | grep "PDO" &&
        docker run php-cli-testing -m | grep "session" &&
        docker run php-cli-testing -m | grep "tokenizer" &&
        docker run php-cli-testing -m | grep "Zend OPcache" &&
        docker run php-cli-testing composer -V | grep "Composer version" &&
        docker run php-cli-testing | grep "Interactive mode enabled" &&
        docker run -e UPLOAD_MAX_FILESIZE=200M php-cli-testing -r 'phpinfo();' | grep "UPLOAD_MAX_FILESIZE => 200M" &&
        docker run -e OPCACHE_MEMORY_CONSUMPTION=200M php-cli-testing -r 'phpinfo();' | grep "opcache.memory_consumption => 200M"

  php74-fpm-image-test:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v4
    - 
      name: Build testing Doker image
      uses: docker/build-push-action@v5
      with:
        push: false
        target: php-fpm
        tags: php-fpm-testing
        build-args: PHP_VERSION=7.4
    - 
      name: Check FPM binary
      run: 
        docker run php-fpm-testing find /usr/sbin/php-fpm7.4 &&
        docker run php-fpm-testing find /usr/bin/php-fpm
